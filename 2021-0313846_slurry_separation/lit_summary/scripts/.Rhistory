library(readxl)
library(ggplot2)
library(ALFAM2)
devtools::install_github("sashahafner/ALFAM2", build_vignettes = TRUE)
install.packages("C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/R/win-library/4.1/ALFAM2_1.5.5.tar.gz")
install.packages("C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/R/win-library/4.1/ALFAM2_1.5.5.tar.gz", type = 'source')
install.packages("~/R/win-library/4.1/ALFAM2_1.5.5.tar.gz", repos = NULL, type = "source")
source('packages.R')
setwd('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/GitHub/AU-myndighedsbetjening/2021-0313846_slurry_separation/EF_calcs/scripts')
source('packages.R')
library(readxl)
library(ALFAM2)
library(ggplot2)
library(dplyr)
library(rmarkdown)
library(reshape2)
source('packages.R')
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
# Reshape field EF data frame
dref <- dat[dat$scenario == 'reference', ]
dref$EF.field.raw.none <- dref$EF
dsep <- dat[dat$scenario != 'reference', ]
datw <- dcast(dsep, scenario + app.timing + man.source ~ fraction + incorp, value.var = 'EF')
names(datw)[-1:-3] <- paste0('EF.field.', gsub('_', '.', names(datw)[-1:-3]))
datw <- merge(datw, dref[, c('app.timing', 'man.source', 'EF.field.raw.none')], by = c('app.timing', 'man.source'))
# Add separation efficiency
datw <- merge(datw, sep, by = 'scenario')
# And storage EFs
datw <- merge(datw, stor, by = 'man.source')
# Calculate overall EFs
# For raw (reference) there is no denitrification loss
datw$EF.raw.overall <- datw$EF.stor.raw + (1 - datw$EF.stor.raw) * datw$EF.field.raw.none
# With separation, TAN is also assumed to be lost through denitrification (see N.loss.stor.solid)
datw$EF.sep.incorp.overall <- (1 - datw$sep.eff.TAN) * (datw$EF.stor.liquid + (1 - datw$EF.stor.liquid) * datw$EF.field.liquid.none) +
datw$sep.eff.TAN * (datw$EF.stor.solid + (1 - datw$N.loss.stor.solid) * datw$EF.field.solid.deep)
datw$EF.sep.surface.overall <- (1 - datw$sep.eff.TAN) * (datw$EF.stor.liquid + (1 - datw$EF.stor.liquid) * datw$EF.field.liquid.none) +
datw$sep.eff.TAN * (datw$EF.stor.solid + (1 - datw$N.loss.stor.solid) * datw$EF.field.solid.none)
# Make long version for plotting
datl <- melt(datw, id.vars = 1:12, measure.vars = 13:15, value.name = 'EF.overall', variable.name = 'EF.type')
datl$EFp.overall <- 100 * datl$EF.overall
# Spread by scenario for error bar plot
dats <- dcast(datl, app.timing + man.source + EF.type ~ scenario, value.var = 'EFp.overall')
dat$app.timing <- factor(dat$app.timing, levels = c('Marts', 'April', 'Maj', 'Sommer', 'EfterÃ¥r'))
datw$man.source <- factor(datw$man.source, levels = c('KvÃ¦ggylle', 'Svinegylle', 'Afgasset biomasse'))
datw$app.timing <- factor(datw$app.timing, levels = c('Marts', 'April', 'Maj', 'Sommer', 'EfterÃ¥r'))
dats$app.timing <- factor(dats$app.timing, levels = c('Marts', 'April', 'Maj', 'Sommer', 'EfterÃ¥r'))
dats$EF.type <- factor(dats$EF.type, levels = c('EF.raw.overall', 'EF.sep.incorp.overall', 'EF.sep.surface.overall'),
labels = c('Untreated (reference)', 'Separated with solids incorporation', 'Separated with broadcast solids'))
# Complete EF data frame
write.csv(dat, '../output/EF.csv', row.names = FALSE)
write.csv(preds, '../output/preds.csv', row.names = FALSE)
datw <- datw[order(datw$app.timing, datw$man.source), ]
write.csv(datw, '../output/EF_sep_comp.csv', row.names = FALSE)
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
library(ALFAM2)
ns <- 50
dat <- data.frame(id = 1:ns, ct = 168, man.dm = seq(0, 40, length.out = ns), tan.app = 100, app.rate.ni = 30)
pred <- alfam2(dat, time.name = 'ct', group = 'id', app.name = 'tan.app')
dat <- cbind(dat, pred[, -1:-3])
plot(er ~ man.dm, data = dat, type = 'l', ylim = c(0, 0.8))
abline(v = 15, lty = 2, col = 'gray45')
args(alfam2)
rm(list = ls())
source('packages.R')
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
ggsave('../plots/field_emis_factors.png', height = 4.8, width = 6.9)
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode1', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
ggsave('../plots/field_emis_factors.png', height = 4.8, width = 6.9)
View(dat)
dat$fraction <- mapvalues(dat$fraction, from = c('solid'), to = c('Fiber'))
dat$fraction <- mapvalues(dat$fraction, from = c('liquid'), to = c('Væske'))
dat$fraction <- mapvalues(dat$fraction, from = c('raw'), to = c('Ubehandlet'))
dat$incorp <- mapvalues(dat$incorp, from = c('none'), to = c('Ingen'))
dat$incorp <- mapvalues(dat$incorp, from = c('deep'), to = c('Nedpløjning'))
library(plyr)
dat$fraction <- mapvalues(dat$fraction, from = c('solid'), to = c('Fiber'))
dat$fraction <- mapvalues(dat$fraction, from = c('liquid'), to = c('Væske'))
dat$fraction <- mapvalues(dat$fraction, from = c('raw'), to = c('Ubehandlet'))
dat$incorp <- mapvalues(dat$incorp, from = c('none'), to = c('Ingen'))
dat$incorp <- mapvalues(dat$incorp, from = c('deep'), to = c('Nedpløjning'))
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
ggsave('../plots/field_emis_factors.png', height = 4.8, width = 6.9)
dat$incorp <- mapvalues(dat$incorp, from = c('none'), to = c(''))
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
ggsave('../plots/field_emis_factors.png', height = 4.8, width = 6.9)
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
dat$fraction <- mapvalues(dat$fraction, from = c('solid'), to = c('Fiber'))
dat$fraction <- mapvalues(dat$fraction, from = c('liquid'), to = c('Væske'))
dat$fraction <- mapvalues(dat$fraction, from = c('raw'), to = c('Ubehandlet'))
dat$incorp <- mapvalues(dat$incorp, from = c('none'), to = c(''))
dat$incorp <- mapvalues(dat$incorp, from = c('deep'), to = c('Nedpløjning'))
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
ggsave('../plots/field_emis_factors.png', height = 4.8, width = 6.9)
dat$incorp <- mapvalues(dat$incorp, from = c('none'), to = c('Ingen'))
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
dat$fraction <- mapvalues(dat$fraction, from = c('solid'), to = c('Fiber'))
dat$fraction <- mapvalues(dat$fraction, from = c('liquid'), to = c('Væske'))
dat$fraction <- mapvalues(dat$fraction, from = c('raw'), to = c('Ubehandlet'))
dat$incorp <- mapvalues(dat$incorp, from = c('none'), to = c('Ingen'))
dat$incorp <- mapvalues(dat$incorp, from = c('deep'), to = c('Nedpløjning'))
ggplot(dat, aes(as.integer(app.timing), EFp, shape = interaction(fraction, incorp), colour = interaction(fraction, incorp))) +
geom_point() +
geom_line(aes(group = interaction(fraction, incorp, scenario)), lty = 1, alpha = 0.08) +
facet_wrap(~ man.source) +
ylim(0, max(dat$EFp)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
ggsave('../plots/field_emis_factors.png', height = 4.8, width = 6.9)
ggplot(datl, aes(as.integer(app.timing), EFp.overall, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_line(lty = 1, alpha = 0.08) +
facet_grid(scenario ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'Emissionsfaktor (% af TAN)',
shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = 'top')
dats$app.timing.num <- as.integer(dats$app.timing) + as.numeric(dats$EF.type)/10 - 0.2
dats$highest <- pmax(dats$high, dats$high2)
ggplot(dats, aes(app.timing.num, mid, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = highest), width = 0) +
geom_line(lty = 1, alpha = 0.08) +
facet_wrap( ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'OVERALL COMBINED Emissionsfaktor (% af TAN)', shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = 'top')
dats$EF.type <- mapvalues(dat$EF.type, from = c('Untreated (reference)'), to = c('Ubehandlet (reference)'))
dats$EF.type <- mapvalues(dat$EF.type, from = c('Separated with solids incorporation'), to = c('Separeret med nedpløjet fiberfraktion'))
dats$EF.type <- mapvalues(dat$EF.type, from = c('Separated with broadcast solids'), to = c('Separeret med bredspredt fiberfraktion'))
ggplot(dats, aes(app.timing.num, mid, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = highest), width = 0) +
geom_line(lty = 1, alpha = 0.08) +
facet_wrap( ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'OVERALL COMBINED Emissionsfaktor (% af TAN)', shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = 'top')
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
dats$app.timing.num <- as.integer(dats$app.timing) + as.numeric(dats$EF.type)/10 - 0.2
dats$highest <- pmax(dats$high, dats$high2)
ggplot(dats, aes(app.timing.num, mid, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = highest), width = 0) +
geom_line(lty = 1, alpha = 0.08) +
facet_wrap( ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'OVERALL COMBINED Emissionsfaktor (% af TAN)', shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = 'top')
dats$EF.type <- mapvalues(dat$EF.type, from = c('Untreated (reference)'), to = c('Ubehandlet (reference)'))
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
View(dats)
dats$EF.type <- mapvalues(dat$EF.type, from = c('	Untreated (reference)'), to = c('Ubehandlet (reference)'))
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
dats$EF.type <- as.character(dats$EF.type)
dats$EF.type <- mapvalues(dat$EF.type, from = c('	Untreated (reference)'), to = c('Ubehandlet (reference)'))
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
dats$EF.type <- as.character(dats$EF.type)
dats$EF.type1 <- as.character(dats$EF.type)
dats$EF.type1 <- mapvalues(dat$EF.type1, from = c('Untreated (reference)'), to = c('Ubehandlet (reference)'))
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
source('factors.R')
source('export.R')
dats$app.timing.num <- as.integer(dats$app.timing) + as.numeric(dats$EF.type)/10 - 0.2
dats$highest <- pmax(dats$high, dats$high2)
ggplot(dats, aes(app.timing.num, mid, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = highest), width = 0) +
geom_line(lty = 1, alpha = 0.08) +
facet_wrap( ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'OVERALL COMBINED Emissionsfaktor (% af TAN)', shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = 'top')
rm(list = ls())
source('packages.R')
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
source('calc_overall.R')
dat$app.timing <- factor(dat$app.timing, levels = c('Marts', 'April', 'Maj', 'Sommer', 'EfterÃ¥r'))
datw$man.source <- factor(datw$man.source, levels = c('KvÃ¦ggylle', 'Svinegylle', 'Afgasset biomasse'))
datw$app.timing <- factor(datw$app.timing, levels = c('Marts', 'April', 'Maj', 'Sommer', 'EfterÃ¥r'))
dats$app.timing <- factor(dats$app.timing, levels = c('Marts', 'April', 'Maj', 'Sommer', 'EfterÃ¥r'))
dats$EF.type <- factor(dats$EF.type, levels = c('EF.raw.overall', 'EF.sep.incorp.overall', 'EF.sep.surface.overall'),
labels = c('Ubehandlet (reference)', 'Separeret med nedpløjet fiberfraktion', 'Separeret med bredspredt fiberfraktion'))
dats$app.timing.num <- as.integer(dats$app.timing) + as.numeric(dats$EF.type)/10 - 0.2
dats$highest <- pmax(dats$high, dats$high2)
ggplot(dats, aes(app.timing.num, mid, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = highest), width = 0) +
geom_line(lty = 1, alpha = 0.08) +
facet_wrap( ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'OVERALL COMBINED Emissionsfaktor (% af TAN)', shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = 'top')
ggsave('../plots/overall_emis_factors.png', height = 4.8, width = 6.9)
dats$app.timing.num <- as.integer(dats$app.timing) + as.numeric(dats$EF.type)/10 - 0.2
dats$highest <- pmax(dats$high, dats$high2)
ggplot(dats, aes(app.timing.num, mid, shape = EF.type, colour = EF.type)) +
geom_point() +
geom_errorbar(aes(ymin = low, ymax = highest), width = 0) +
geom_line(lty = 1, alpha = 0.08) +
facet_wrap( ~ man.source) +
ylim(0, max(datl$EFp.overall)) +
labs(x = 'Udbringningsperiode', y = 'Samlet emissionsfaktor (% af TAN)', shape = '', colour = '') +
scale_shape_manual(values = c(19, 24, 6, 20, 1)) +
scale_x_continuous(breaks = unique(as.integer(dat$app.timing)), labels= unique(dat$app.timing)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = 'top')
ggsave('../plots/overall_emis_factors.png', height = 4.8, width = 6.9)
rm(list = ls())
setwd('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/GitHub/AU-myndighedsbetjening/2021-0313846_slurry_separation/lit_separation/scripts')
source('functions.R')
source('packages.R')
install.packages("viridis")
source('packages.R')
rm(list = ls())
source('functions.R')
source('packages.R')
source('load.R')
source('prep.R')
render('predict.Rmd', output_dir = '../logs')
head(dat)
dat$emis.red <- 100 * (1 - dat$emis.sep / dat$emis.un)
dat$emis.red.pred <- 100 * (1 - dat$emis.sep.pred / dat$emis.raw.pred)
dat$dm.red <- dat$DM.un - dat$DM.sep
dat <- subset(dat, !is.na(emis.sep.pred))
table(dat$app.mthd)
dat$app.mthd.nm <- factor(dat$app.mthd, levels = c('broadcast', 'trailing hose', 'unknown'), labels = c('Broadcast', 'Trailing hose', 'Unknown\n(trailing hose)'))
dat$meas.meth[grepl('^indirect', dat$meas.meth)] <- 'IOMT'
ggplot(dat, aes(emis.sep.pred, emis.sep, coulour = app.mthd.nm)) +
geom_abline(slope = 1, intercept = 0, col = 'gray35') +
geom_segment(aes(x = emis.raw.pred, y = emis.un, xend = emis.sep.pred, yend = emis.sep, colour = app.mthd.nm),
arrow = arrow(length = unit(0.2, 'cm'))) +
labs(x = 'Calculated emis. (% TAN)', y = 'Measured emis. (% TAN)', colour = '') +
theme(legend.position = 'top')
ggplot(dat, aes(emis.sep.pred, emis.sep, coulour = meas.meth)) +
geom_abline(slope = 1, intercept = 0, col = 'gray35') +
geom_segment(aes(x = emis.raw.pred, y = emis.un, xend = emis.sep.pred, yend = emis.sep, colour = meas.meth),
arrow = arrow(length = unit(0.2, 'cm'))) +
labs(x = 'Calculated emis. (% TAN)', y = 'Measured emis. (% TAN)', colour = '') +
theme(legend.position = 'right')
ggplot(dat, aes(emis.red.pred, emis.red, colour = dm.red, shape = app.mthd.nm)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, col = 'gray35') +
scale_colour_viridis_c(option = 'plasma') +
labs(x = 'Calculated emis. reduction (% of untreated emission)', y = 'Measured emis. reduction (% of untreated emission)',
colour = 'DM red.\n(% total mass)', shape = '') +
theme(legend.position = 'right')
setwd('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/GitHub/AU-myndighedsbetjening/2021-0313846_slurry_separation/lit_summary/scripts')
rm(list = ls())
source('functions.R')
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
source('summ.R')
source('export.R')
dd <- subset(dat, fraction == 'solid')
ggplot(dd, aes(slurry.source, TAN.sep.eff, colour = source)) +
geom_point() +
labs(x = 'Source', y = 'TAN separation efficiency (%)', colour = '')
dd <- subset(dat, fraction == 'solid' & !is.na(S.emis.perc))
ggplot(dd, aes(slurry.source, S.emis.perc, colour = source)) +
geom_point() +
labs(x = 'Source', y = 'TAN loss during storage (%)', colour = '')
dd <- subset(dat, fraction == 'solid' & !is.na(S.emis.ini))
ggplot(dd, aes(slurry.source, S.emis.ini, colour = source)) +
geom_point() +
labs(x = 'Source', y = 'TAN loss during storage (%)', colour = '')
dd <- subset(dat, slurry.source %in% c('cattle', 'pig') & fraction != 'solid')
dd$slurry.source <- ifelse(dd$slurry.source == 'pig', 'Svinegylle', 'KvÃ¦ggylle')
ee <- subset(EFs, man.source %in% c('Svinegylle', 'KvÃ¦ggylle') & fraction != 'solid')
ee$slurry.source <- ee$man.source
ee$A.DM <- ee$man.dm
ee$A.emis.perc <- ee$EFp
ee$source <- 'ALFAM2'
ggplot(dd, aes(A.DM, A.emis.perc, shape = fraction, colour = viridis(3)[1])) +
geom_smooth(aes(group = 1), colour = 'gray75', lty = 1, lwd = 2, alpha = 0.7, method = lm, se = FALSE) +
geom_point() +
geom_point(data = ee, colour = viridis(3)[2]) +
facet_wrap(~ slurry.source) +
geom_smooth(aes(group = source), method = lm, se = FALSE) +
geom_smooth(data = ee, aes(group = 1), method = lm, colour = viridis(3)[2], se = FALSE) +
labs(x = 'TÃ¸rstof (%)', y = 'Emissionsfaktor (% af TAN)') +
theme(legend.position = 'none')
dd <- subset(dat, slurry.source %in% c('cattle', 'pig') & fraction != 'solid')
dd$slurry.source <- ifelse(dd$slurry.source == 'pig', 'Svinegylle', 'Kvæggylle')
ee <- subset(EFs, man.source %in% c('Svinegylle', 'Kvæggylle') & fraction != 'solid')
ee$slurry.source <- ee$man.source
ee$A.DM <- ee$man.dm
ee$A.emis.perc <- ee$EFp
ee$source <- 'ALFAM2'
ggplot(dd, aes(A.DM, A.emis.perc, shape = fraction, colour = viridis(3)[1])) +
geom_smooth(aes(group = 1), colour = 'gray75', lty = 1, lwd = 2, alpha = 0.7, method = lm, se = FALSE) +
geom_point() +
geom_point(data = ee, colour = viridis(3)[2]) +
facet_wrap(~ slurry.source) +
geom_smooth(aes(group = source), method = lm, se = FALSE) +
geom_smooth(data = ee, aes(group = 1), method = lm, colour = viridis(3)[2], se = FALSE) +
labs(x = 'Tørstof (%)', y = 'Emissionsfaktor (% af TAN)') +
theme(legend.position = 'none')
ggsave('../plots/emis_v_DM.png', height = 4, width = 6)
View(dat)
